from collections import deque


def bfs(graph, start_node):
    
    queue = deque([start_node])
    visited = set([start_node])
    
    
    bfs_order = []

    while queue:
       
        current_node = queue.popleft()
        bfs_order.append(current_node)

        
        for neighbor in graph[current_node]:
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append(neighbor)
    
    return bfs_order


graph = {
    'A': ['B', 'C'],
    'B': ['A', 'D', 'E'],
    'C': ['A', 'F'],
    'D': ['B'],
    'E': ['B', 'F'],
    'F': ['C', 'E']
}


bfs_traversal = bfs(graph, 'A')
print("BFS Traversal:", bfs_traversal)
